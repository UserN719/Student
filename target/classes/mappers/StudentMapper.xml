<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- 이 XML의 구조대로 구현될 클래스의 이름 -->
<mapper namespace="StudentMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="student" type="study.spring.hellospring.model.Student">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="studno" 	column="studno" />
		<result property="name" 	column="name" />
		<result property="userid" 		column="userid" />
		<result property="grade" 		column="grade" />
		<result property="idnum" 		column="idnum" />
		<result property="birthdate" 		column="birthdate" />
		<result property="tel" 		column="tel" />
		<result property="height" 		column="height" />
		<result property="weight" 		column="weight" />
		<result property="deptno" 		column="deptno" />
		<result property="profno" 		column="profno" />
	</resultMap>

	<!-- 학생 목록 조회하기 -->
	<select id="selectStudentList" parameterType="study.spring.hellospring.model.Student"
	 resultMap="student">
		SELECT studno, name, userid, grade, idnum, 
		DATE_FORMAT(birthdate, '%Y-%m-%d') as birthdate, tel, height, weight,deptno, profno
		FROM student
		order by studno asc
	</select>
	
	<!-- 학생 단일행 조회하기 -->
	<select id="selectStudentItem" parameterType="study.spring.hellospring.model.Student"
	 resultMap="student">
		SELECT studno, name, userid, grade, idnum, 
		DATE_FORMAT(birthdate, '%Y-%m-%d') as birthdate, tel, height, 
		weight, deptno, profno
		FROM student
		where studno = #{studno}
	</select>
	
	<!-- 학생 데이터 저장하기 -->
	<insert id="insertStudentItem" parameterType="study.spring.hellospring.model.Student"
	 useGeneratedKeys="true" keyProperty="studno">
		insert into student (name, userid, grade, idnum,
		birthdate, tel, height, weight, deptno, profno) 
		values (
			#{name}, #{userid}, #{grade}, #{idnum}, #{birthdate}, #{tel}, #{height}, #{weight}, #{deptno}, #{profno}
		)
	</insert>
	
	<!--
		데이터 삭제를 위한 기능 정의
		<delete id="메서드이름" parameterType="파라미터의 데이터 타입">
	-->
	<delete id="deleteStudentItem" parameterType="study.spring.hellospring.model.Student">
		<!-- "#{변수명}" 으로 표시된 곳에 파라미터로 전달된 Beans의 멤버변수값이 치환된다. -->
		DELETE FROM student WHERE studno=#{studno}
	</delete>
	
	<!--
		데이터 갱신을 위한 기능 정의
		<update id="메서드이름" parameterType="파라미터의 데이터 타입">
	-->
	<update id="updateStudentItem" parameterType="study.spring.hellospring.model.Student">
		<!-- "#{변수명}" 으로 표시된 곳에 파라미터로 전달된 Beans의 멤버변수값이 치환된다. -->
		UPDATE student SET 
			name=#{name}, userid=#{userid}, grade=#{grade}, idnum=#{idnum},
			birthdate=#{birthdate}, tel=#{tel}, height=#{height}, weight=#{weight},
			deptno=#{deptno}, profno=#{profno}
		WHERE studno=#{studno}
	</update>
</mapper>